// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using food_tracker_api.Data;

namespace food_tracker_api.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20220221005144_FoodItemCreate")]
    partial class FoodItemCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.11")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("food_tracker_api.Models.FoodItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("ExpirationDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("IndividualPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("IsPerishable")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int?>("StoragePlaceId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StoragePlaceId");

                    b.ToTable("FoodItem");
                });

            modelBuilder.Entity("food_tracker_api.Models.StoragePlace", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CurrentCapacity")
                        .HasColumnType("int");

                    b.Property<bool>("IsFull")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StorageCapacity")
                        .HasColumnType("int");

                    b.Property<string>("StorageLocation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StorageType")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("StoragePlaces");
                });

            modelBuilder.Entity("food_tracker_api.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("food_tracker_api.Models.FoodItem", b =>
                {
                    b.HasOne("food_tracker_api.Models.StoragePlace", "StoragePlace")
                        .WithMany("FoodItems")
                        .HasForeignKey("StoragePlaceId");

                    b.Navigation("StoragePlace");
                });

            modelBuilder.Entity("food_tracker_api.Models.StoragePlace", b =>
                {
                    b.HasOne("food_tracker_api.Models.User", "User")
                        .WithMany("StoragePlaces")
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("food_tracker_api.Models.StoragePlace", b =>
                {
                    b.Navigation("FoodItems");
                });

            modelBuilder.Entity("food_tracker_api.Models.User", b =>
                {
                    b.Navigation("StoragePlaces");
                });
#pragma warning restore 612, 618
        }
    }
}
